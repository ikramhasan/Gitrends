import MainNav from "@/components/Navbar";
import RepositoryCard from "@/components/RepositoryCard";
import Loading from "@/components/Spinner";
import { useGlobalShortcut } from "@/hooks/tauri/shortcuts";
import { Button, ButtonGroup } from "@nextui-org/react";
import { invoke } from "@tauri-apps/api/tauri";
import type { NextPage } from "next";
import Head from "next/head";
import { useCallback, useEffect, useState } from "react";
import Repository from "@/types/repository";

const Home: NextPage = () => {
  const [repositories, setRepositories] = useState<Repository[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [activeTab, setActiveTab] = useState("all");

  useEffect(() => {
    setIsLoading(true);
    invoke<Repository[]>("fetch_trending_repos", { language: activeTab })
      .then((result) => {
        setIsLoading(false);
        setRepositories(result);
      })
      .catch(console.error);
  }, [activeTab]);

  const shortcutHandler = useCallback(() => {
    console.log("Ctrl+P was pressed!");
  }, []);
  useGlobalShortcut("CommandOrControl+P", shortcutHandler);

  const tabs = [
    {
      id: "all",
      label: "All",
    },
    {
      id: "rust",
      label: "Rust",
    },
    {
      id: "python",
      label: "Python",
    },
    {
      id: "typescript",
      label: "TS",
    },
    {
      id: "go",
      label: "Go",
    },
    {
      id: "dart",
      label: "Dart",
    },
  ];

  return (
    <div className="flex min-h-screen flex-col dark bg-background text-foreground">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainNav />

      <main className="flex flex-col items-start justify-start flex-1 p-4">
        <div className="flex w-full flex-col">
          <ButtonGroup className="mb-4" fullWidth>
            {tabs.map((tab) => (
              <Button
                key={tab.id}
                onClick={() => {
                  setActiveTab(tab.id);
                }}
                color={activeTab === tab.id ? "primary" : "default"}
                variant={activeTab === tab.id ? "solid" : "ghost"}
              >
                {tab.label}
              </Button>
            ))}
          </ButtonGroup>
          {isLoading ? (
            <Loading />
          ) : (
            <ul className="grid grid-cols-1 gap-4">
              {repositories.map((repo) => (
                <RepositoryCard key={repo.url} {...repo} />
              ))}
            </ul>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
